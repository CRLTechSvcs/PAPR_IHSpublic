# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.

application.secret="YoM7SG[jRo_nupQjqT>[2RN^:eNicqT3cJD2gw5aKYg9r2nXYaYPiMp1Y1w/qkPX"
#
#Session time-out
#session.maxAge=900

#application.mode=prod

# The application languages
# ~~~~~
application.langs="en"

parsers.text.maxLength = 2048k

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
#db.default.driver=org.h2.Driver
#db.default.url="jdbc:h2:mem:play"
#

##########################
db.default.driver=com.mysql.jdbc.Driver
db.default.url="jdbc:mysql://127.0.0.1/crl"
# AJE : syntax with 'localhost' may fail ?
# AJE : be sure user 'crl' exists and has grant on database named in db.default.url
#db.default.url="jdbc:mysql://localhost/crl"
#db.default.url="jdbc:mysql://192.168.1.19/crl"
db.default.user=crl
db.default.pass="crl"
evolutionplugin=disabled

#Application specific variable
application.http.data.Dir="data/httpdata"
application.ftp.data.Dir="data/ftpdata"
application.ftp.process.data.Dir="data/ftpprocess"
# application.publishing.process.data.Dir="data/pubprocess" # Travant original
application.publishing.process.data.Dir="public/reports" # AJE 2016-08-25 accidentally stumbled on after 2 weeks' work
# 2016-08-25 application.PUBLISHING.process.data.Dir value
#   will be used in IssuesHeldReport.java, public String createPdf: becomes the PATH of the PDF
#   (the actual filename is a random number and easily visible string)
application.deaccesion.process.data.Dir="data/pubprocess" # Travant original
# application.reporting.process.data.Dir="data/pubprocess" # Travant original ; NOTE THIS MAY NOTHING TO DO WITH REPORTING
application.reporting.process.data.Dir="public/reports" # AJE 2016-12-06 this is where the EXPORT DATA files are created

# AJE 2016-08-09 DEVNOTE: the directory "/data/pubprocess" does not appear to get created by default when the 'system' is first installed;
#		in /app/actors/ReportingActor.java, the href in 'ihsReportingJob.setLink' may need to be changed.
# 	the value of application.REPORTING.process.data.Dir is appended to: [I WAS WRONG, but this is the configuration element that should deal with the reporting function]
#		the value of application.PUBLISHING.process.data.Dir is appended to: [CORRECT 2016-08-25]
#		http://127.0.0.1:9000/
# 	[or whatever the server is using]
# see the 'routes' file, but as of 2016-08-10 data/pubprocess is not found, with error "Action not found"

# AJE 2016-08-24 DEVNOTE: "public/reports" not created by default either
# AJE 2016-08-25 see note above re: application.PUBLISHING.process.data.Dir;
#   this application.REPORTING.process.data.Dir actually appears to have no relation to the "Reporting" menu item.
#   Kill me now.
# AJE 2016-08-25 FIX TO THE PROBLEM of reports being generated
# (they could be found in /data/pubprocess) but not accessible via the 'Download' link is that
# 1) here, change application.publishing.process.data.Dir to "public/reports"
# 2) create directory 'reports' (under existing 'public', where 'images', 'javascripts', stylesheets' are
# 3) add to 'routes' file a thing I don't have terminology for (done at end; search 'allahu akbar') which tells server where find files
# AJE 2016-08-25 so the value of application.REPORTING.process.data.Dir is NOT RELEVANT to the sections controlled by java files with names like REPORTING,
#   and linked from sidebar with text like REPORTING and PREVIOUS REPORTS
#		this truly boggles the mind. Nothing can be trusted.
#################################




# You can expose this datasource via JNDI if needed (Useful for JPA)
# db.default.jndiName=DefaultDS

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
#ebean.default="models.*"
ebean.default="models.*"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=INFO

# show SQL
#db.default.logStatements=true
#logger.com.jolbox=DEBUG



# ------- Deadbolt -------
deadbolt {
  java {
    handler=security.AppDeadboltHandler,
    # cache-user is set to false, otherwise it's not possible to mix deadbolt handler that do and don't have users in the template examples
    cache-user=false
  }
}